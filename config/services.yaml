# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

    _defaults:
        # ...

services:
    App\Controller\GetNftsFromGallery:
        autowire: true
    App\Encoder\MultipartDecoder: # Assurez-vous que cette ligne est décommentée
        autowire: true
        tags: [ 'serializer.encoder' ]
    App\Serializer\UploadedFileDenormalizer: # Assurez-vous que cette ligne est décommentée
        autowire: true
        tags:
            - { name: kernel.serializer.normalizer, method: denormalize }
    App\Serializer\Normalizer\NftNormalizer: # Assurez-vous que cette ligne est décommentée
        class: App\Serializer\Normalizer\NftNormalizer # Spécifiez la classe associée
        autowire: true
        tags: [ 'serializer.normalizer' ]
    App\EventListener\DeserializeListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', method: 'onKernelRequest', priority: 2 }
        # Autoconfiguration must be disabled to set a custom priority
        autoconfigure: false
        decorates: 'api_platform.listener.request.deserialize'
        arguments:
            $decorated: '@App\EventListener\DeserializeListener.inner'
    App\Controller\NftUploadController:
        autowire: true
    App\Controller\PostAvatarDescriptionUserController:
        autowire: true
    App\Controller\UserGoogleController:
        autowire: true

    services:
            class: App\EventListener\LoginSuccessListener
            tags:
                - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }

#                   App\Serializer\UploadedFileDenormalizer
#                - { name: kernel.serializer.normalizer, method: denormalize }

    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

#    App\Service\FileUploader:
#        arguments:
#            $targetDirectory: '%kernel.project_dir%/public/uploads'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

